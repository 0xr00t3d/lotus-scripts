SCAN_TYPE = 3
BODY_MATCH = {
    'please input shell command',
    'ZTE Corporation. All rights reserved',
}

local function send_report(url)
    CveReport:setName("CVE-2014-2321")
    CveReport:setDescription("ZTE F460 and F660 cable modems allows remote attackers to obtain administrative access via sendcmd requests to web_shell_cmd.gch, as demonstrated by using 'set TelnetCfg' commands to enable a TELNET service with specified credentials.")
    CveReport:setRisk("high")
    CveReport:setUrl(url)
    Reports:addCveReport(CveReport)
    print_cve_report(CveReport)
end

function scan_cve(target_path)
    local new_path = pathjoin(HttpMessage:Path(),target_path)
    local new_url = HttpMessage:urlJoin(new_path)
    local resp_status, resp = pcall(function ()
        println(new_url)
        return http:send("GET", new_url)
    end)
    if resp_status == true then
        local url = resp.url
        local body = resp.body
        local body_match = ResponseMatcher:match_body(body,BODY_MATCH) -- Matching body with List with and conditions
        if resp.status ~= 200 then 
            return
        end
        if body_match then 
            for _,match_txt in ipairs(BODY_MATCH) do
                CveReport:addMatcher(match_txt,3)  -- 3 = response body
            end
            CveReport:addMatcher("200",4)  -- 4 = response status
            send_report(url)
        end
    end
end

function main()
    scan_cve("web_shell_cmd.gch")
end
