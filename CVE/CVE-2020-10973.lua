SCAN_TYPE = 3
BODY_MATCH = {
    'Salted__',
}

local function send_report(resp)
    Reports:add{
        name = "CVE-2020-10973",
        description = "Wavlink WN530HG4, WN531G3, WN533A8, and WN551K are susceptible to improper access control via /cgi-bin/ExportAllSettings.sh, where a crafted POST request returns the current configuration of the device, including the administrator password. No authentication is required. The attacker must perform a decryption step, but all decryption information is readily available.",
        risk = "high",
        url = url,
        matches = {
            status_code = "200",
            body = {
                "Salted__"
            },
            full_response = show_response(resp)
        }
    }
end

local function scan_cve(target_path)
    local new_path = pathjoin(HttpMessage:path(), target_path)
    local new_url = HttpMessage:urljoin(new_path)
    local resp_status, resp = pcall(function()
        return http:send{url = new_url}
    end)
    if resp_status == true then
        local body = resp.body
        local body_match = Matcher:match_body(body, BODY_MATCH) -- Matching body with List with and conditions
        if resp.status ~= 200 then return end
        if body_match and resp.headers["content-type"] == "application/octet-stream" then
            send_report(resp)
        end
    end
end

function main()
    scan_cve("/backupsettings.dat")
end
